// const jwt = require("jsonwebtoken");

const express = require("express");
const router = express.Router();
const bcrypt = require("bcrypt");

const cookieParser = require("cookie-parser");

//using cookie parser
router.use(cookieParser());
// use middeleware file

const auth = require("../middleware/auth");

require("../db/connection");
const data = require("../userregister/datafom");

// use middeleware

// middeleware = (req, res, next) => {
//   console.log("this is middelwere response");
//   next();
// };

// get routing

router.get("/", (req, res) => {
  res.send("hello world this is home page from router created by nirbhay");
});

router.post("/register", async (req, res) => {
  const { firstname, lastname, email, work, mobailno, password, cpassword } =
    req.body;

  if (
    !firstname ||
    !lastname ||
    !email ||
    !work ||
    !mobailno ||
    !password ||
    !cpassword
  ) {
    res.status(422).json({ error: "plese fill all fieled" });
    console.log("all fesld not fill ");
  }

  try {
    const passmatch = password === cpassword;

    const userexist = await data.findOne({ email: email });
    if (userexist) {
      res.status(422).json({ error: "user is allready exist" });
    } else {
      const user = new data({
        firstname,
        lastname,
        email,
        work,
        mobailno,
        password,
        cpassword,
      });

      if (passmatch) {
        await user.save();
        res.status(201).json({ message: "registration successful" });
      } else {
        res.json({ error: "password not matched" });
      }
    }
  } catch (error) {
    console.log(error);
    console.log("registration feald error");
  }
});

//login part

router.post("/signin", async (req, res) => {
  try {
    const { email, password } = req.body;

    if (!email || !password) {
      res.status(400).json({ message: "fill data in all feals" });
    }

    const userlogin = await data.findOne({ email: email });

    if (userlogin) {
      const match = await bcrypt.compare(password, userlogin.password);
      if (match) {
        const token = await userlogin.generateAuthToken();

        res.cookie("jwtoken", token, {
          expires: new Date(Date.now() + 604800000),
          httpOnly: true,
        });
        console.log(token);

        res.status(200).json({ message: "logged in " });
      } else {
        res.status(400).json({ message: "invalid information" });
      }
    } else {
      res.status(400).json({ message: "invalid information" });
    }

    // console.log(match);
  } catch (err) {
    console.log("error from login ");
  }
});

//dashboard request with middeleware

router.get("/Dashboard", auth, (req, res) => {
  res.send(req.topid_data);
  console.log("this is about response");
});

router.post("/contect", auth, async (req, res) => {
  try {
    const { firstname, email, message } = req.body;
    console.log(req.body);

    if (!firstname || !email || !message) {
      res.json({ error: "plz fill all filed" });
    }

    const match = await data.findOne({ _id: req.userID });

    if (match) {
      const matchget = await match.messagepush(firstname, email, message);
      console.log(matchget);
      await match.save();
      console.log("msg saved");

      // res.status(201).json({ message: "message saved successfully" });
    }
  } catch (error) {
    console.log(error);
    console.log("server contect not run");
  }

  res.send("hello world this is service page created by nirbhay");
});

router.get("/login", (req, res) => {
  res.send("hello world this is login page created by nirbhay");
});

router.get("/singup", (req, res) => {
  res.send("hello world this is signup page created by nirbhay");
});

router.get("/profile", (req, res) => {
  res.send("hello world this is profile page after login created by nirbhay");
});

// router.listen(port, () => {
//   console.log(`router renning on port no ${port}`);
// });

module.exports = router;
